{"version":3,"sources":["Assets/logo.jpg","Store/utility-functions.js","Store/reducers/burger.js","Store/actions/types/actionTypes.js","Store/reducers/orders.js","Store/reducers/auth.js","Axios/Axios.js","Store/actions/app-actions/orders.js","Components/Layout/Layout.js","Components/Burger/Burger.js","Components/UI/Button/Button.js","Components/AddIngredients/add-ingredients.js","Containers/BurgerBuilder/BurgerBuilder.js","Store/actions/app-actions/burger.js","Global/Validation.js","Components/UI/ErrorHandler/ErrorHandler.js","Components/CheckoutForm/CheckoutForm.js","Components/UI/Loader/Loader.js","Components/OneOrder/OneOrder.js","Containers/Orders/Orders.js","Store/actions/app-actions/auth.js","Components/SignUp/SignUp.js","Components/Header/Header.js","Containers/App/App.js","index.js"],"names":["module","exports","__webpack_require__","p","updatedState","prevObject","updatedObject","Object","objectSpread","initialState","ingredients","totalPrice","loading","INGREDIENT_PRICES","meat","bacon","cheese","salad","bread","reducer","state","arguments","length","undefined","action","type","concat","toConsumableArray","ingredient","filter","id","orders","token","error","errorMessage","response","data","message","window","localStorage","clear","getItem","instance","axios","create","baseURL","fetchOrdersToState","dispatch","currentToken","get","then","layout","props","react_default","a","createElement","Fragment","children","burger","map","className","key","onClick","remove","button","clicked","disabled","addIngredients","buttons","Button_Button","BurgerBuilder","randomKey","Math","random","toString","substr","addIngredientHandler","newIngredient","_this","checkIfDisabled","price","sendOrderHandler","history","push","_this$props","this","removeIngredient","Burger_Burger","add_ingredients","Component","connect","formValidation","pattern","errorHandler","CheckoutForm","customerInformation","name","city","email","validated","noIngredients","loginError","onChange","event","prevState","validation","target","value","match","setState","keys","el","orderBurger","preventDefault","post","customer","res","clearIngredients","pushToMain","_this$state","loginErrorMessage","ErrorHandler_ErrorHandler","onSubmit","placeholder","street","auth","loader","order","orderRemoveError","style","textAlign","marginTop","Orders","activeError","removeOrderHandler","removeOrder","getOrders","_this2","userOrders","Loader_Loader","OneOrder","react_router","to","delete","getToken","SignUp","userData","password","signUp","changeSignMethod","onSignMethodChange","onChangeHandler","errorMessagesHandler","handleAuth","_this$state$userData","signError","isLogged","isRegister","signUpStart","returnSecureToken","requestURL","idToken","setItem","expiresIn","setTimeout","catch","signInError","Header","logOutHandler","logOut","react_router_dom","exact","src","logo","alt","App","Components_Header_Header","Layout","path","component","SignUpForm","reducers","combineReducers","burgerReducer","ordersReducer","authReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","Containers_App_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb2d80a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fab25a65.jpg\";","const updatedState = (prevObject, updatedObject) => {\r\n    return {\r\n        ...prevObject,\r\n        ...updatedObject\r\n    };\r\n};\r\n\r\nexport default updatedState;\r\n","import * as actionTypes from \"../actions/types/actionTypes\";\r\nimport updatedState from \"../utility-functions\";\r\n\r\nconst initialState = {\r\n  ingredients: [],\r\n  totalPrice: 0,\r\n  loading: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n  meat: 20,\r\n  bacon: 15,\r\n  cheese: 10,\r\n  salad: 5,\r\n  bread: 3\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_INGREDIENTS:\r\n      return updatedState(state, {\r\n        ingredients: [...state.ingredients, action.ingredient],\r\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredient.type]\r\n      });\r\n    case actionTypes.REMOVE_INGREDIENT:\r\n      return updatedState(state, {\r\n        ingredients: state.ingredients.filter(ingredient => ingredient.id !== action.ingredient.id),\r\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredient.type]\r\n      });\r\n    case actionTypes.CLEAR_STATE:\r\n      return updatedState(state, {\r\n        ingredients: [],\r\n        totalPrice: 0\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const ADD_INGREDIENTS = \"ADD_INGREDIENTS\";\r\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\r\nexport const CLEAR_STATE = \"CLEAR_STATE\";\r\n\r\nexport const GET_ORDERS = \"GET_ORDERS\";\r\nexport const GET_ORDERS_START = \"GET_ORDERS_START\";\r\nexport const GET_ORDERS_SUCCESS = \"GET_ORDERS_SUCCESS\";\r\n\r\nexport const SIGNUP_START = \"SIGNUP_START\";\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\r\nexport const SIGNIN = \"SIGNIN\";\r\nexport const SIGNIN_ERROR = \"SIGNUP_ERROR\";\r\nexport const ON_SIGN_METHOD_CHANGE = \"ON_SIGN_METHOD_CHANGE\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const GET_LOCAL_TOKEN = \"GET_LOCAL_TOKEN\";\r\n","import * as actionTypes from \"../actions/types/actionTypes\";\r\nimport updatedState from \"../utility-functions\";\r\n\r\nconst initialState = {\r\n  orders: null,\r\n  loading: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_ORDERS_START:\r\n      return updatedState(state, {\r\n        loading: true\r\n      });\r\n    case actionTypes.GET_ORDERS:\r\n      return updatedState(state, {\r\n        orders: action.ingredients,\r\n        loading: false\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"../actions/types/actionTypes\";\r\nimport updatedState from \"../utility-functions\";\r\n\r\nconst initialState = {\r\n  token: null,\r\n  error: false,\r\n  errorMessage: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SIGNUP_START:\r\n      return updatedState(state, {\r\n        error: false\r\n      });\r\n    case actionTypes.ON_SIGN_METHOD_CHANGE:\r\n      return updatedState(state, {\r\n        error: false\r\n      });\r\n    case actionTypes.SIGNUP_SUCCESS:\r\n      return updatedState(state, {\r\n        token: action.token\r\n      });\r\n    case actionTypes.SIGNIN_ERROR:\r\n      return updatedState(state, {\r\n        error: true,\r\n        errorMessage: action.error.response.data.error.message\r\n      });\r\n    case actionTypes.LOGOUT:\r\n      window.localStorage.clear();\r\n      return updatedState(state, {\r\n        token: null\r\n      });\r\n    case actionTypes.GET_LOCAL_TOKEN:\r\n      return updatedState(state, {\r\n        token: window.localStorage.getItem(\"token\")\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://react-burgerbuilder-14d6b.firebaseio.com'\r\n});\r\n\r\nexport default instance;\r\n","import * as actionTypes from \"../types/actionTypes\";\r\nimport axios from \"../../../Axios/Axios\";\r\n\r\nexport const getOrdersStart = () => {\r\n  return {\r\n    type: actionTypes.GET_ORDERS_START\r\n  };\r\n};\r\n\r\nexport const getOrders = ingredients => {\r\n  return {\r\n    type: actionTypes.GET_ORDERS,\r\n    ingredients: ingredients\r\n  };\r\n};\r\n\r\nexport const removeOrder = (id, token) => {\r\n  return dispatch => {\r\n    axios.delete(`/orders/${id}.json?auth=${token}`).then(res => {\r\n      dispatch(fetchOrdersToState(token));\r\n    });\r\n  };\r\n};\r\n\r\nexport const fetchOrdersToState = () => {\r\n  return dispatch => {\r\n    dispatch(getOrdersStart());\r\n    const currentToken = window.localStorage.getItem(\"token\");\r\n\r\n    axios.get(`/orders.json?auth=${currentToken}`).then(response => {\r\n      dispatch(getOrders(response.data));\r\n    });\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nconst layout = props => (\r\n    <React.Fragment>\r\n        <div>{props.children}</div>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default layout;\r\n","import React from \"react\";\r\n\r\nimport \"../../Styles/Components/Burger.scss\";\r\n\r\nconst burger = props => {\r\n  let ingredients = props.ingredients.map(ingredient => {\r\n    return (\r\n      <div\r\n        className={\"ingregient \" + ingredient.type}\r\n        type={ingredient.type}\r\n        key={ingredient.id}\r\n        onClick={() => props.remove(ingredient)}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (props.ingredients.length <= 0) {\r\n    ingredients = <p>Introduce some ingredients</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"burger\">\r\n      <div className=\"ingregient bread-top\" />\r\n      {ingredients}\r\n      <div className=\"ingregient bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\n\r\nimport '../../../Styles/UI/Button.scss';\r\n\r\nconst button = props => (\r\n    <button\r\n        className={'component-btn ' + props.type}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}\r\n    >\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;\r\n","import React from 'react';\r\n\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst addIngredients = props => {\r\n    const types = ['bacon', 'meat', 'salad', 'cheese', 'bread'];\r\n\r\n    const buttons = types.map(button => {\r\n        return (\r\n            <Button clicked={() => props.clicked(button)} key={button} type=\"ingredient-btn\">\r\n                add {button}\r\n            </Button>\r\n        );\r\n    });\r\n\r\n    return <div className=\"add-ingridients\">{buttons}</div>;\r\n};\r\n\r\nexport default addIngredients;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addIngredients, removeIngredient } from \"../../Store/actions\";\r\n\r\nimport Burger from \"../../Components/Burger/Burger\";\r\nimport Button from \"../../Components/UI/Button/Button\";\r\nimport AddIngredients from \"../../Components/AddIngredients/add-ingredients\";\r\n\r\nimport \"../../Styles/Containers/BurgerBuilder.scss\";\r\n\r\nclass BurgerBuilder extends Component {\r\n  randomKey = () =>\r\n    Math.random()\r\n      .toString()\r\n      .substr(2, 9);\r\n\r\n  addIngredientHandler = type => {\r\n    const newIngredient = {\r\n      id: this.randomKey(),\r\n      type: type\r\n    };\r\n\r\n    this.props.addIngredients(newIngredient);\r\n  };\r\n\r\n  checkIfDisabled = () => {\r\n    return this.props.price === 0 ? true : false;\r\n  };\r\n\r\n  sendOrderHandler = () => {\r\n    this.props.history.push(\"/checkout\");\r\n  };\r\n\r\n  render() {\r\n    const { price, ingredients, removeIngredient } = this.props;\r\n    return (\r\n      <div className=\"burger-builder\">\r\n        <Burger ingredients={ingredients} remove={removeIngredient} />\r\n        <div className=\"burger-controls\">\r\n          <AddIngredients clicked={this.addIngredientHandler} />\r\n          <div className=\"checkout-summary\">\r\n            <div className=\"total-price\">\r\n              Total price: <strong>{price}</strong> $\r\n            </div>\r\n            <Button type=\"success\" disabled={this.checkIfDisabled()} clicked={this.sendOrderHandler}>\r\n              checkout\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burger.ingredients,\r\n    price: state.burger.totalPrice\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addIngredients: ingredient => dispatch(addIngredients(ingredient)),\r\n    removeIngredient: ingredient => dispatch(removeIngredient(ingredient))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(BurgerBuilder);\r\n","import * as actionTypes from '../types/actionTypes';\r\n\r\nexport const addIngredients = payload => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENTS,\r\n        ingredient: payload\r\n    };\r\n};\r\n\r\nexport const removeIngredient = payload => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredient: payload\r\n    };\r\n};\r\n\r\nexport const clearState = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_STATE\r\n    };\r\n};\r\n","export const formValidation = type => {\r\n  let pattern = null;\r\n  switch (type) {\r\n    case \"text\":\r\n      pattern = /[a-zA-Z]*/g;\r\n      break;\r\n    case \"email\":\r\n      pattern = /.{3,}?@.+[.].+/g;\r\n      break;\r\n    case \"password\":\r\n      pattern = /^.{6,20}$/g;\r\n      break;\r\n\r\n    default:\r\n      pattern = /[a-zA-Z]*/g;\r\n      break;\r\n  }\r\n  return pattern;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"../../../Styles/UI/ErrorHandler.scss\";\r\n\r\nconst errorHandler = props => <div className={\"error \" + props.className}>{props.children}</div>;\r\n\r\nexport default errorHandler;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"../../Axios/Axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { clearState } from \"../../Store/actions\";\r\nimport { formValidation } from \"../../Global/Validation\";\r\n\r\nimport Button from \"../UI/Button/Button\";\r\nimport ErrorHanlder from \"../UI/ErrorHandler/ErrorHandler\";\r\n\r\nimport \"../../Styles/Components/CheckOutForm.scss\";\r\n\r\nclass CheckoutForm extends Component {\r\n  state = {\r\n    customerInformation: {\r\n      name: \"\",\r\n      city: \"\",\r\n      email: \"\"\r\n    },\r\n    validated: false,\r\n    noIngredients: false,\r\n    loginError: false\r\n  };\r\n\r\n  onChange = event => {\r\n    const { customerInformation } = this.state;\r\n\r\n    const prevState = { ...customerInformation };\r\n    const validation = formValidation(event.target.type);\r\n    if (!event.target.value.match(validation)) {\r\n      event.target.className = \"error-input\";\r\n    }\r\n    if (event.target.value.match(validation)) {\r\n      event.target.className = \"validated-input\";\r\n      prevState[event.target.name] = event.target.value;\r\n      this.setState({ customerInformation: prevState });\r\n    }\r\n\r\n    let validatedInputs = Object.keys(customerInformation).filter(el => {\r\n      return customerInformation[el] === \"\";\r\n    });\r\n\r\n    if (validatedInputs.length === 0) {\r\n      this.setState({ validated: true });\r\n    }\r\n  };\r\n\r\n  orderBurger = event => {\r\n    event.preventDefault();\r\n    const { token, ingredients, price } = this.props;\r\n\r\n    if (ingredients.length === 0) {\r\n      this.setState({ noIngredients: true });\r\n    }\r\n\r\n    if (!this.props.token) {\r\n      this.setState({ loginError: true });\r\n    }\r\n    if (this.state.validated && ingredients.length > 0 && this.props.token !== null) {\r\n      axios\r\n        .post(`orders.json?auth=${token}`, {\r\n          ingredients: ingredients,\r\n          customer: this.state.customerInformation,\r\n          price: price\r\n        })\r\n        .then(res => {\r\n          this.props.clearIngredients();\r\n          this.props.history.push(\"/orders\");\r\n        });\r\n    }\r\n  };\r\n\r\n  pushToMain = () => {\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { customerInformation, noIngredients, loginError } = this.state;\r\n    let loginErrorMessage = null;\r\n    if (noIngredients) {\r\n      return (\r\n        <ErrorHanlder>\r\n          <p>Sorry but you can't order a burger, without ingredients</p>\r\n          <Button type=\"primary\" clicked={this.pushToMain}>\r\n            go back and add some\r\n          </Button>\r\n        </ErrorHanlder>\r\n      );\r\n    }\r\n\r\n    if (loginError) {\r\n      loginErrorMessage = (\r\n        <ErrorHanlder>\r\n          <p>You must be logged in to order a burger</p>\r\n        </ErrorHanlder>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"check-out-form\">\r\n        <form onSubmit={this.orderBurger}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your name\"\r\n            value={customerInformation.name}\r\n            name=\"name\"\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter your City\"\r\n            value={customerInformation.city}\r\n            name=\"city\"\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your Email\"\r\n            value={customerInformation.street}\r\n            name=\"email\"\r\n            onChange={this.onChange}\r\n          />\r\n          <Button type=\"primary\">Order Burger</Button>\r\n          {loginErrorMessage}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ingredients: state.burger.ingredients,\r\n    price: state.burger.totalPrice,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nconst mapDispathToProps = dispatch => {\r\n  return {\r\n    clearIngredients: () => dispatch(clearState())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispathToProps\r\n)(CheckoutForm);\r\n","import React from 'react';\r\n\r\nimport '../../../Styles/UI/Loader.scss';\r\n\r\nconst loader = () => (\r\n    <div className=\"lds-roller\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n    </div>\r\n);\r\n\r\nexport default loader;\r\n","import React from \"react\";\r\n\r\nimport Burger from \"../Burger/Burger\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst order = props => (\r\n  <>\r\n    <div className=\"order-wrapper\">\r\n      <Burger ingredients={props.ingredients} remove={props.orderRemoveError} />\r\n    </div>\r\n    <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\r\n      <Button type=\"danger\" clicked={props.clicked}>\r\n        Remove\r\n      </Button>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default order;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    fetchOrdersToState,\r\n    removeOrder,\r\n    getLocalToken\r\n} from '../../Store/actions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Loader from '../../Components/UI/Loader/Loader';\r\nimport ErrorHanlder from '../../Components/UI/ErrorHandler/ErrorHandler';\r\nimport Button from '../../Components/UI/Button/Button';\r\n\r\nimport Order from '../../Components/OneOrder/OneOrder';\r\n\r\nimport '../../Styles/Components/Orders.scss';\r\n\r\nclass Orders extends Component {\r\n    state = {\r\n        activeError: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.token) {\r\n            this.props.getOrders(this.props.orders);\r\n        }\r\n    }\r\n\r\n    removeOrderHandler = id => {\r\n        this.props.removeOrder(id, this.props.token);\r\n    };\r\n\r\n    pushToMain = () => {\r\n        this.props.history.push('React-Burger/');\r\n    };\r\n\r\n    render() {\r\n        const { orders, loading, token } = this.props;\r\n\r\n        let userOrders = null;\r\n\r\n        if (!token) {\r\n            return <Redirect to=\"React-Burger/\" />;\r\n        }\r\n\r\n        if (loading) {\r\n            return (userOrders = <Loader />);\r\n        }\r\n\r\n        if (!orders) {\r\n            return (userOrders = (\r\n                <ErrorHanlder className=\"no-items\">\r\n                    <p>Looks like you have no orders yet</p>\r\n                    <Button type=\"primary\" clicked={this.pushToMain}>\r\n                        go back and create them\r\n                    </Button>\r\n                </ErrorHanlder>\r\n            ));\r\n        }\r\n\r\n        userOrders = Object.keys(orders).map(order => {\r\n            return (\r\n                <div key={order} className=\"one-order\">\r\n                    <div className=\"order-price\">\r\n                        Burger Price: <strong>{orders[order].price}</strong>{' '}\r\n                    </div>\r\n                    <Order\r\n                        ingredients={orders[order].ingredients}\r\n                        clicked={() => this.removeOrderHandler(order)}\r\n                        orderRemoveError={() => {}}\r\n                    />\r\n                </div>\r\n            );\r\n        });\r\n\r\n        return <div className=\"orders\">{userOrders}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders.orders,\r\n        loading: state.orders.loading,\r\n        token: state.auth.token\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getOrders: () => dispatch(fetchOrdersToState()),\r\n        removeOrder: (id, token) => dispatch(removeOrder(id, token)),\r\n        getToken: () => dispatch(getLocalToken())\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Orders);\r\n","import axios from \"axios\";\r\nimport * as actionType from \"../types/actionTypes\";\r\n\r\nexport const signUpStart = (email, password) => {\r\n  return {\r\n    type: actionType.SIGNUP_START,\r\n    userData: {\r\n      email: email,\r\n      password: password\r\n    }\r\n  };\r\n};\r\n\r\nexport const signUpSuccess = idToken => {\r\n  return {\r\n    type: actionType.SIGNUP_SUCCESS,\r\n    token: idToken\r\n  };\r\n};\r\n\r\nexport const signInError = error => {\r\n  return {\r\n    type: actionType.SIGNIN_ERROR,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const logOut = () => {\r\n  return {\r\n    type: actionType.LOGOUT\r\n  };\r\n};\r\n\r\nexport const authSignUpMethodChange = () => {\r\n  return {\r\n    type: actionType.ON_SIGN_METHOD_CHANGE\r\n  };\r\n};\r\n\r\nexport const getLocalToken = () => {\r\n  return {\r\n    type: actionType.GET_LOCAL_TOKEN\r\n  };\r\n};\r\n\r\nexport const auth = (email, password, isRegister) => {\r\n  return dispatch => {\r\n    dispatch(signUpStart());\r\n    const userData = {\r\n      email: email,\r\n      password: password,\r\n      returnSecureToken: true\r\n    };\r\n\r\n    const BASE_URL = \"https://www.googleapis.com/identitytoolkit/v3/relyingparty/\";\r\n    const API_KEY = \"AIzaSyCc5raNAqXtAAyN9cg551OOGoLV4_UZM98\";\r\n\r\n    let requestURL = `${BASE_URL}${isRegister ? \"signupNewUser\" : \"verifyPassword\"}?key=${API_KEY}`;\r\n\r\n    axios\r\n      .post(requestURL, userData)\r\n      .then(response => {\r\n        dispatch(signUpSuccess(response.data.idToken));\r\n        localStorage.setItem(\"token\", response.data.idToken);\r\n        localStorage.setItem(\"expires\", response.data.expiresIn);\r\n        setTimeout(() => {\r\n          dispatch(logOut());\r\n        }, response.data.expiresIn * 1000);\r\n      })\r\n      .catch(error => {\r\n        dispatch(signInError(error));\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as action from \"../../Store/actions/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { formValidation } from \"../../Global/Validation\";\r\n\r\nimport Button from \"../UI/Button/Button\";\r\nimport ErrorHanlder from \"../UI/ErrorHandler/ErrorHandler\";\r\n\r\nimport \"../../Styles/Components/SignUp.scss\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    userData: {\r\n      email: {\r\n        value: \"\",\r\n        validated: false\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        validated: false\r\n      }\r\n    },\r\n    signUp: true\r\n  };\r\n\r\n  changeSignMethod = event => {\r\n    event.preventDefault();\r\n    this.props.onSignMethodChange();\r\n    this.setState(() => {\r\n      return {\r\n        signUp: !this.state.signUp\r\n      };\r\n    });\r\n  };\r\n\r\n  onChangeHandler = event => {\r\n    const { userData } = this.state;\r\n\r\n    const userDataLenght = Object.keys(userData);\r\n\r\n    if (userDataLenght.length === 0) {\r\n      this.setState({ validated: true });\r\n    }\r\n\r\n    const prevState = { ...userData };\r\n    prevState[event.target.type].value = event.target.value;\r\n\r\n    const validation = formValidation(event.target.type);\r\n    if (!event.target.value.match(validation)) {\r\n      event.target.className = \"error-input\";\r\n      prevState[event.target.type].validated = false;\r\n    }\r\n    if (event.target.value.match(validation)) {\r\n      event.target.className = \"validated-input\";\r\n      prevState[event.target.type].validated = true;\r\n    }\r\n\r\n    this.setState({ userData: prevState });\r\n  };\r\n\r\n  errorMessagesHandler = errorMessage => {\r\n    let message = \"\";\r\n    switch (errorMessage) {\r\n      case \"EMAIL_EXISTS\":\r\n        message = \"An account with this email already exists\";\r\n        break;\r\n      case \"INVALID_PASSWORD\":\r\n        message = \"Your password is incorect\";\r\n        break;\r\n      case \"EMAIL_NOT_FOUND\":\r\n        message = \"Your email is incorect\";\r\n        break;\r\n      default:\r\n        return message;\r\n    }\r\n    return message;\r\n  };\r\n\r\n  handleAuth = event => {\r\n    const { email, password } = this.state.userData;\r\n    event.preventDefault();\r\n\r\n    let isValid = email.validated && password.validated;\r\n\r\n    if (isValid) {\r\n      this.props.auth(email.value, password.value, this.state.signUp);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, signUp } = this.state;\r\n\r\n    const signError = this.props.error ? (\r\n      <ErrorHanlder>{this.errorMessagesHandler(this.props.errorMessage)}</ErrorHanlder>\r\n    ) : null;\r\n\r\n    return (\r\n      <div>\r\n        <form className=\"signup-form\">\r\n          <input type=\"email\" placeholder=\"Enter your email\" value={email} onChange={this.onChangeHandler} />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={this.onChangeHandler}\r\n          />\r\n          <Button type=\"success\" clicked={this.changeSignMethod}>\r\n            change to {signUp ? \"Sign In\" : \"Sign Up\"}\r\n          </Button>\r\n          <Button type=\"primary\" clicked={this.handleAuth}>\r\n            {signUp ? \"Register\" : \"Login\"}\r\n          </Button>\r\n          {signError}\r\n        </form>\r\n        {this.props.isLogged ? <Redirect to=\"/\" /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    error: state.auth.error,\r\n    isLogged: state.auth.token !== null,\r\n    errorMessage: state.auth.errorMessage\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    auth: (email, password, isRegister) => dispatch(action.auth(email, password, isRegister)),\r\n    onSignMethodChange: () => dispatch(action.authSignUpMethodChange())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SignUp);\r\n","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../Store/actions/index';\r\n\r\nimport '../../Styles/Components/Header.scss';\r\nimport logo from '../../Assets/logo.jpg';\r\n\r\nclass Header extends Component {\r\n    logOutHandler = () => {\r\n        if (this.props.isLogged) {\r\n            this.props.logOut();\r\n        }\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-navigation\">\r\n                    <NavLink exact to=\"React-Burger/\">\r\n                        Burger Builder\r\n                    </NavLink>\r\n                    {this.props.isLogged ? (\r\n                        <NavLink to=\"React-Burger/\">Orders</NavLink>\r\n                    ) : null}\r\n                    <NavLink\r\n                        to=\"React-Burger/signup\"\r\n                        onClick={this.logOutHandler}\r\n                    >\r\n                        {this.props.isLogged ? 'Logout' : 'Sign Up'}\r\n                    </NavLink>\r\n                </div>\r\n                <div className=\"header-logo\">\r\n                    <div className=\"logo-wrapper\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLogged: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut: () => dispatch(action.logOut())\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as action from '../../Store/actions/';\r\n\r\nimport Layout from '../../Components/Layout/Layout';\r\n\r\nimport BurgerBuilder from '../BurgerBuilder/BurgerBuilder';\r\nimport CheckoutForm from '../../Components/CheckoutForm/CheckoutForm';\r\nimport Orders from '../Orders/Orders';\r\nimport SignUpForm from '../../Components/SignUp/SignUp';\r\n\r\nimport Header from '../../Components/Header/Header';\r\n\r\nimport '../../Styles/Containers/App.scss';\r\n\r\nclass App extends Component {\r\n    componentDidMount() {\r\n        this.props.token();\r\n    }\r\n    render() {\r\n        return (\r\n            <BrowserRouter>\r\n                <Header />\r\n\r\n                <Layout>\r\n                    <Route path=\"/\" exact component={BurgerBuilder} />\r\n                    <Route path=\"/orders\" component={Orders} />\r\n                    <Route path=\"/checkout\" component={CheckoutForm} />\r\n                    <Route path=\"/signup\" component={SignUpForm} />\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLogged: state.auth.token !== null\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        token: () => dispatch(action.getLocalToken())\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport burgerReducer from './Store/reducers/burger';\nimport ordersReducer from './Store/reducers/orders';\nimport authReducer from './Store/reducers/auth';\nimport App from './Containers/App/App';\n\nimport './index.css';\n\nconst reducers = combineReducers({\n    burger: burgerReducer,\n    orders: ordersReducer,\n    auth: authReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('app'));\n"],"sourceRoot":""}